"""Initial schema

Revision ID: 4f87b52b1041
Revises: 
Create Date: 2025-10-28 03:21:54.713858

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '4f87b52b1041'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('external_events',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('event_type', sa.String(length=50), nullable=False),
    sa.Column('event_name', sa.String(length=255), nullable=True),
    sa.Column('event_date', sa.DateTime(), nullable=False),
    sa.Column('latitude', sa.Float(), nullable=True),
    sa.Column('longitude', sa.Float(), nullable=True),
    sa.Column('location_name', sa.String(length=255), nullable=True),
    sa.Column('test_country', sa.String(length=50), nullable=True),
    sa.Column('test_yield_kt', sa.Float(), nullable=True),
    sa.Column('test_type', sa.String(length=50), nullable=True),
    sa.Column('uap_report_id', sa.String(length=100), nullable=True),
    sa.Column('uap_source', sa.String(length=100), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('source', sa.String(length=255), nullable=True),
    sa.Column('additional_metadata', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_external_events_event_date'), 'external_events', ['event_date'], unique=False)
    op.create_index(op.f('ix_external_events_event_type'), 'external_events', ['event_type'], unique=False)
    op.create_index(op.f('ix_external_events_id'), 'external_events', ['id'], unique=False)
    op.create_table('plates',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('filename', sa.String(length=255), nullable=False),
    sa.Column('file_path', sa.String(length=512), nullable=False),
    sa.Column('file_size', sa.Integer(), nullable=False),
    sa.Column('upload_date', sa.DateTime(), nullable=False),
    sa.Column('plate_id', sa.String(length=50), nullable=True),
    sa.Column('observation_date', sa.DateTime(), nullable=True),
    sa.Column('exposure_time', sa.Float(), nullable=True),
    sa.Column('ra', sa.Float(), nullable=True),
    sa.Column('dec', sa.Float(), nullable=True),
    sa.Column('field_center_ra', sa.Float(), nullable=True),
    sa.Column('field_center_dec', sa.Float(), nullable=True),
    sa.Column('width', sa.Integer(), nullable=True),
    sa.Column('height', sa.Integer(), nullable=True),
    sa.Column('pixel_scale', sa.Float(), nullable=True),
    sa.Column('limiting_magnitude', sa.Float(), nullable=True),
    sa.Column('filter_name', sa.String(length=50), nullable=True),
    sa.Column('telescope', sa.String(length=100), nullable=True),
    sa.Column('observatory', sa.String(length=100), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=True),
    sa.Column('additional_metadata', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_plates_filename'), 'plates', ['filename'], unique=True)
    op.create_index(op.f('ix_plates_id'), 'plates', ['id'], unique=False)
    op.create_index(op.f('ix_plates_observation_date'), 'plates', ['observation_date'], unique=False)
    op.create_index(op.f('ix_plates_plate_id'), 'plates', ['plate_id'], unique=False)
    op.create_index(op.f('ix_plates_status'), 'plates', ['status'], unique=False)
    op.create_table('detections',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('plate_id', sa.Integer(), nullable=False),
    sa.Column('x', sa.Float(), nullable=False),
    sa.Column('y', sa.Float(), nullable=False),
    sa.Column('width', sa.Float(), nullable=False),
    sa.Column('height', sa.Float(), nullable=False),
    sa.Column('ra', sa.Float(), nullable=True),
    sa.Column('dec', sa.Float(), nullable=True),
    sa.Column('confidence', sa.Float(), nullable=False),
    sa.Column('model_version', sa.String(length=50), nullable=False),
    sa.Column('object_type', sa.String(length=50), nullable=True),
    sa.Column('verified', sa.Boolean(), nullable=True),
    sa.Column('verification_status', sa.String(length=50), nullable=True),
    sa.Column('panstarrs_matches', sa.Integer(), nullable=True),
    sa.Column('gaia_matches', sa.Integer(), nullable=True),
    sa.Column('catalog_data', sa.Text(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('detected_at', sa.DateTime(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['plate_id'], ['plates.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_detections_confidence'), 'detections', ['confidence'], unique=False)
    op.create_index(op.f('ix_detections_id'), 'detections', ['id'], unique=False)
    op.create_index(op.f('ix_detections_object_type'), 'detections', ['object_type'], unique=False)
    op.create_index(op.f('ix_detections_plate_id'), 'detections', ['plate_id'], unique=False)
    op.create_index(op.f('ix_detections_verification_status'), 'detections', ['verification_status'], unique=False)
    op.create_index(op.f('ix_detections_verified'), 'detections', ['verified'], unique=False)
    op.create_table('verifications',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('detection_id', sa.Integer(), nullable=False),
    sa.Column('decision', sa.String(length=50), nullable=False),
    sa.Column('user_id', sa.String(length=50), nullable=True),
    sa.Column('confidence', sa.Integer(), nullable=True),
    sa.Column('is_transient', sa.Boolean(), nullable=True),
    sa.Column('is_artifact', sa.Boolean(), nullable=True),
    sa.Column('is_cosmic_ray', sa.Boolean(), nullable=True),
    sa.Column('is_known_object', sa.Boolean(), nullable=True),
    sa.Column('tags', sa.String(length=255), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('review_time', sa.Integer(), nullable=True),
    sa.Column('verified_at', sa.DateTime(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['detection_id'], ['detections.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_verifications_decision'), 'verifications', ['decision'], unique=False)
    op.create_index(op.f('ix_verifications_detection_id'), 'verifications', ['detection_id'], unique=False)
    op.create_index(op.f('ix_verifications_id'), 'verifications', ['id'], unique=False)
    op.create_index(op.f('ix_verifications_user_id'), 'verifications', ['user_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_verifications_user_id'), table_name='verifications')
    op.drop_index(op.f('ix_verifications_id'), table_name='verifications')
    op.drop_index(op.f('ix_verifications_detection_id'), table_name='verifications')
    op.drop_index(op.f('ix_verifications_decision'), table_name='verifications')
    op.drop_table('verifications')
    op.drop_index(op.f('ix_detections_verified'), table_name='detections')
    op.drop_index(op.f('ix_detections_verification_status'), table_name='detections')
    op.drop_index(op.f('ix_detections_plate_id'), table_name='detections')
    op.drop_index(op.f('ix_detections_object_type'), table_name='detections')
    op.drop_index(op.f('ix_detections_id'), table_name='detections')
    op.drop_index(op.f('ix_detections_confidence'), table_name='detections')
    op.drop_table('detections')
    op.drop_index(op.f('ix_plates_status'), table_name='plates')
    op.drop_index(op.f('ix_plates_plate_id'), table_name='plates')
    op.drop_index(op.f('ix_plates_observation_date'), table_name='plates')
    op.drop_index(op.f('ix_plates_id'), table_name='plates')
    op.drop_index(op.f('ix_plates_filename'), table_name='plates')
    op.drop_table('plates')
    op.drop_index(op.f('ix_external_events_id'), table_name='external_events')
    op.drop_index(op.f('ix_external_events_event_type'), table_name='external_events')
    op.drop_index(op.f('ix_external_events_event_date'), table_name='external_events')
    op.drop_table('external_events')
    # ### end Alembic commands ###
